geom_line() +
labs(x="week",y="rank",
title="Ranks Every Week",
caption="Source: tidyverse/ billboard dataset")
cms_patient_experience
?(pivot_wider)
patient_experience <- cms_patient_experience %>%
pivot_wider(
rows = group_by(measure_cd),
names_to = "week",
values_to = "value",
values_drop_na = TRUE
) %>%
mutate(week = parse_number(week))
patient_experience <- cms_patient_experience %>%
pivot_wider(
rows = group_by(measure_cd),
names_to = "org",
values_to = "value",
values_drop_na = TRUE
)
patient_experience <- cms_patient_experience %>%
pivot_wider(
names_from = measure_cd,
values_from = prf_rate,
values_drop_na = TRUE
)
patient_experience <- cms_patient_experience %>%
pivot_wider(
names_from = measure_cd,
values_from = prf_rate
)
patient_experience
patient_experience <- cms_patient_experience %>%
pivot_wider(
names_from = org_nm,
values_from = prf_rate
)
patient_experience
patient_experience <- cms_patient_experience %>%
pivot_wider(
rows= group=org_nm,
patient_experience <- cms_patient_experience %>%
pivot_wider(
rows= group_by(org_nm),
names_from = org_nm,
values_from = prf_rate
)
patient_experience <- cms_patient_experience %>%
pivot_wider(
names_from = org_nm,
values_from = prf_rate
)
patient_experience
patient_experience <- cms_patient_experience %>%
pivot_wider(
names_from = org_nm,
values_from = prf_rate,
values_drop_na = TRUE
)
patient_experience <- cms_patient_experience %>%
pivot_wider(
names_from = org_nm,
values_from = prf_rate
)
patient_experience
patient_experience <- cms_patient_experience %>%
pivot_wider(
names_from = org_nm,
values_from = prf_rate,
names_drop_na + TRUE
)
patient_experience <- cms_patient_experience %>%
pivot_wider(
names_from = org_nm,
values_from = prf_rate,
names_drop_na = TRUE
)
patient_experience <- cms_patient_experience %>%
pivot_wider(
names_from = org_nm,
values_from = prf_rate,
names_drop_na = TRUE
) %>%
patient_experience
patient_experience <- cms_patient_experience %>%
pivot_wider(
names_from = org_nm,
values_from = prf_rate,
names_drop_na = TRUE
)
patient_experience <- cms_patient_experience %>%
pivot_wider(
names_from = org_nm,
values_from = prf_rate,
)
patient_experience
patient_experience <- cms_patient_experience %>%
pivot_wider(
names_from = org_nm,
names_drop_na = TRUE,
values_from = prf_rate
)
patient_experience <- cms_patient_experience %>%
pivot_wider(
names_drop_na = TRUE,
names_from = org_nm,
values_from = prf_rate
)
patient_experience <- cms_patient_experience %>%
pivot_wider(
names_drop_na = TRUE,
names_from = org_nm,
values_from = prf_rate
)
patient_experience <- cms_patient_experience %>%
pivot_wider(
names_from = org_nm,
values_from = prf_rate,
values_fill = NULL
)
patient_experience
patient_experience <- cms_patient_experience %>%
pivot_wider(
id_cols = starts_with("org"),
names_from = measure_cd,
values_from = prf_rate
)
patient_experience
tidydata <- tribble(
~country, ~year, ~cases, ~population,
"Afghanistan", 1999, 745, 19987071,
"Afghanistan", 2000, 2666, 20595360,
"Brazil", 1999, 37737, 172006362,
"Brazil", 2000, 80488, 174504898,
"China", 1999, 212258, 1272915272,
"China", 2000, 213766, 1280428583)
tidydata
nontidydata <- tribble(
~country,~year,~rate,
"Afghanistan", 1999, "745/19987071",
"Afghanistan", 2000, "2666/20595360",
"Brazil", 1999, "37737/172006362",
"Brazil", 2000, "80488/174504898",
"China", 1999, "212258/1272915272",
"China", 2000, "213766/1280428583")
nontidydata
nontidydata
tidieddata <- nontidydata %>%
separate(rate, into = c("cases",
"population"),
sep = "/")
tidieddata
newtidieddata <- tidieddata %>%
pivot_longer(
cols = cases:population,
names_to = "measurement",
values_to = "value"
)
newtidieddata
df <- tribble(
~id, ~bp1, ~bp2,
"A", 100, 120,
"B", 140, 115,
"C", 120, 125
)
df
#put bp1 and bp2 under same column "measurement"
df %>%
pivot_longer(
cols = bp1:bp2,
names_to = "measurement",
values_to = "value"
)
newtidieddata
newtidieddata %>%
pivot_wider(names_from="measurement",
values_from="value")
df <- tribble(
~id, ~measurement, ~value,
"A", "bp1", 100,
"B", "bp1", 140,
"B", "bp2", 115,
"A", "bp2", 120,
"A", "bp3", 105
)
df
df %>%
pivot_wider(
names_from = measurement,
values_from = value
)
tidied_billboard <- billboard %>%
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
values_to = "value",
values_drop_na = TRUE
) %>%
mutate(week = parse_number(week))
tidied_billboard
ggplot(data=tidied_billboard,mapping=aes(x=week,y=value, group = track)) +
geom_line() +
labs(x="week",y="rank",
title="Ranks Every Week",
caption="Source: tidyverse/ billboard dataset")
patient_experience <- cms_patient_experience %>%
pivot_wider(
id_cols = starts_with("org"),
names_from = measure_cd,
values_from = prf_rate
)
patient_experience
library(tidyverse)
tidydata <- tribble(
~country, ~year, ~cases, ~population,
"Afghanistan", 1999, 745, 19987071,
"Afghanistan", 2000, 2666, 20595360,
"Brazil", 1999, 37737, 172006362,
"Brazil", 2000, 80488, 174504898,
"China", 1999, 212258, 1272915272,
"China", 2000, 213766, 1280428583)
tidydata
nontidydata <- tribble(
~country,~year,~rate,
"Afghanistan", 1999, "745/19987071",
"Afghanistan", 2000, "2666/20595360",
"Brazil", 1999, "37737/172006362",
"Brazil", 2000, "80488/174504898",
"China", 1999, "212258/1272915272",
"China", 2000, "213766/1280428583")
nontidydata
nontidydata
tidieddata <- nontidydata %>%
separate(rate, into = c("cases",
"population"),
sep = "/")
tidieddata
newtidieddata <- tidieddata %>%
pivot_longer(
cols = cases:population,
names_to = "measurement",
values_to = "value"
)
newtidieddata
df <- tribble(
~id, ~bp1, ~bp2,
"A", 100, 120,
"B", 140, 115,
"C", 120, 125
)
df
#put bp1 and bp2 under same column "measurement"
df %>%
pivot_longer(
cols = bp1:bp2,
names_to = "measurement",
values_to = "value"
)
newtidieddata
newtidieddata %>%
pivot_wider(names_from="measurement",
values_from="value")
df <- tribble(
~id, ~measurement, ~value,
"A", "bp1", 100,
"B", "bp1", 140,
"B", "bp2", 115,
"A", "bp2", 120,
"A", "bp3", 105
)
df
df %>%
pivot_wider(
names_from = measurement,
values_from = value
)
tidied_billboard <- billboard %>%
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
values_to = "value",
values_drop_na = TRUE
) %>%
mutate(week = parse_number(week))
tidied_billboard
ggplot(data=tidied_billboard,mapping=aes(x=week,y=value, group = track)) +
geom_line() +
labs(x="week",y="rank",
title="Ranks Every Week",
caption="Source: tidyverse/ billboard dataset")
patient_experience <- cms_patient_experience %>%
pivot_wider(
id_cols = starts_with("org"),
names_from = measure_cd,
values_from = prf_rate
)
patient_experience
print(n=)
tinytex::install_tinytex()
tinytex::install_tinytex()
tinytex::uninstall_tinytex()
tinytex::install_tinytex()
var client_id = '2987fd72c81242b1a8ea958568489c35';
https://www.healthcare.gov/:post-title.json
https://www.healthcare.gov/accessibility.json
installed.packages(c("httr","jsonlite"))
library(c(httr,jsonlite))
installed.packages(c("httr","jsonlite"))
install.packages(c("httr","jsonlite"))
library(c(httr,jsonlite))
library(c(httr,jsonlite))
library(httr)
library(jsonlite)
install.packages("rvest")
library(rvest)
webpage <- read_html("https://books.toscrape.com/")
table <-html_elements(webpage,"body")
View(table)
setwd("~/")
https://api.covidactnow.org/v2/states.timeseries.json?apiKey=b2770dfd225142c593d7ce5fb53a2362
library(httr)
library(jsonlite)
library(tidyverse)
https://api.covidactnow.org/v2/states.timeseries.json?apiKey=b2770dfd225142c593d7ce5fb53a2362
https://api.covidactnow.org/v2/states.timeseries.json?apiKey=b2770dfd225142c593d7ce5fb53a2362
https://api.covidactnow.org/v2/states.timeseries.json?apiKey="b2770dfd225142c593d7ce5fb53a2362"
historic_state_data_url <- "https://api.covidactnow.org/v2/states.timeseries.json?apiKey=b2770dfd225142c593d7ce5fb53a2362"
raw_data <- GET(historic_state_data_url)
data <- fromJSON(rawToChar(raw_data$content))
glimpse(data)
time_series <- data %>%
unnest(actualsTimeseries)
time_series_transmission <- tibble(Date=time_series$cdcTransmissionLevelTimeseries[[which(data$state=="C
A")]]$date)
time_series_transmission <- tibble(Date=time_series$cdcTransmissionLevelTimeseries[[which(data$state=="CA")]]$date)
time_series_transmission$Alaska <- time_series$cdcTransmissionLevelTimeseries[[which(data$state=="AK")]]$cdcTransmissionLevel
time_series_transmission$California <- time_series$cdcTransmissionLevelTimeseries[[which(data$state=="C
A")]]$cdcTransmissionLevel
time_series_transmission$California <- time_series$cdcTransmissionLevelTimeseries[[which(data$state=="CA")]]$cdcTransmissionLevel
time_series_transmission$New_Jersey <- time_series$cdcTransmissionLevelTimeseries[[which(data$state=="NJ")]]$cdcTransmissionLevel
time_series_transmission$Tennessee <- time_series$cdcTransmissionLevelTimeseries[[which(data$state=="TN")]]$cdcTransmissionLevel
time_series_transmission$District_of_Columbia <- time_series$cdcTransmissionLevelTimeseries[[which(data$state=="DC")]]$cdcTransmissionLevel
print(head(time_series_transmission))
time_series_cases <- list(Alaska = time_series %>% filter(state=="AK") %>% select(date,cases))
time_series_cases$California <- time_series %>% filter(state=="CA") %>% select(date,cases)
time_series_cases$New_Jersey <- time_series %>% filter(state=="NJ") %>% select(date,cases)
time_series_cases$Tennessee <- time_series %>% filter(state=="TN") %>% select(date,cases)
time_series_cases$District_of_Columbia <- time_series %>% filter(state=="DC") %>% select(date,cases)
ggplot(data, aes(x=state,y=population)) + geom_bar(stat="identity") +labs(x="States",y="Population") + th
ggplot(data, aes(x=state,y=population)) + geom_bar(stat="identity") +labs(x="States",y="Population") + theme_bw()
ggplot(data, aes(x=state,y=(data$actuals$cases/population))) + geom_bar(stat="identity") + labs(x="States",y="Infected (%)")+theme_bw()
time_series_transmission[seq(1,1300,by=100),]%>%
pivot_longer(cols=Alaska:District_of_Columbia,names_to="Countries",values_to="Transmission") %>%
ggplot(aes(x=Date,y=Transmission,colour=Countries,group=Countries)) +
geom_point(show.legend=TRUE) + labs(x="Date",y="Transmission Level")+theme_bw()
data_to_plot <- tibble(Date_Alaska = time_series_cases$Alaska$date[seq(1,1300,by=100)],
Cases_Alaska = time_series_cases$Alaska$cases[seq(1,1300,by=100)],
Date_California = time_series_cases$California$date[seq(1,1300,by=100)],
Cases_California = time_series_cases$California$cases[seq(1,1300,by=100)],
Date_New_Jersey = time_series_cases$New_Jersey$date[seq(1,1300,by=100)],
Cases_New_Jersey = time_series_cases$New_Jersey$cases[seq(1,1300,by=100)],
Date_Tennessee = time_series_cases$Tennessee$date[seq(1,1300,by=100)],
Cases_Tennessee = time_series_cases$Tennessee$cases[seq(1,1300,by=100)],
Date_District_of_Columbia = time_series_cases$District_of_Columbia$date[seq(1,130
0,by=100)],
data_to_plot <- tibble(Date_Alaska = time_series_cases$Alaska$date[seq(1,1300,by=100)],
Cases_Alaska = time_series_cases$Alaska$cases[seq(1,1300,by=100)],
Date_California = time_series_cases$California$date[seq(1,1300,by=100)],
Cases_California = time_series_cases$California$cases[seq(1,1300,by=100)],
Date_New_Jersey = time_series_cases$New_Jersey$date[seq(1,1300,by=100)],
Cases_New_Jersey = time_series_cases$New_Jersey$cases[seq(1,1300,by=100)],
Date_Tennessee = time_series_cases$Tennessee$date[seq(1,1300,by=100)],
Cases_Tennessee = time_series_cases$Tennessee$cases[seq(1,1300,by=100)],
Date_District_of_Columbia = time_series_cases$District_of_Columbia$date[seq(1,1300,by=100)],
Cases_District_of_Columbia = time_series_cases$District_of_Columbia$cases[seq(1,1300,by=100)])
data_to_plot
data_to_plot <- tibble(Date_Alaska = time_series_cases$Alaska$date[seq(1,1300,by=100)],
Cases_Alaska = time_series_cases$Alaska$cases[seq(1,1300,by=100)],
Date_California = time_series_cases$California$date[seq(1,1300,by=100)],
Cases_California = time_series_cases$California$cases[seq(1,1300,by=100)],
Date_New_Jersey = time_series_cases$New_Jersey$date[seq(1,1300,by=100)],
Cases_New_Jersey = time_series_cases$New_Jersey$cases[seq(1,1300,by=100)],
Date_Tennessee = time_series_cases$Tennessee$date[seq(1,1300,by=100)],
Cases_Tennessee = time_series_cases$Tennessee$cases[seq(1,1300,by=100)],
Date_District_of_Columbia = time_series_cases$District_of_Columbia$date[seq(1,1300,by=100)],
Cases_District_of_Columbia = time_series_cases$District_of_Columbia$cases[seq(1,1300,by=100)])
data_to_plot
library(cowplot)
install.packages(cowplot)
library(tidyverse)
library(ggplot)
library(tidyverse)
library(ggplot2)
ggplot(data, aes(x=state,y=population)) + geom_bar(stat="identity") +labs(x="States",y="Population") + theme_bw()
data_to_plot <- tibble(Date_Alaska = time_series_cases$Alaska$date[seq(1,1300,by=100)],
Cases_Alaska = time_series_cases$Alaska$cases[seq(1,1300,by=100)],
Date_California = time_series_cases$California$date[seq(1,1300,by=100)],
Cases_California = time_series_cases$California$cases[seq(1,1300,by=100)],
Date_New_Jersey = time_series_cases$New_Jersey$date[seq(1,1300,by=100)],
Cases_New_Jersey = time_series_cases$New_Jersey$cases[seq(1,1300,by=100)],
Date_Tennessee = time_series_cases$Tennessee$date[seq(1,1300,by=100)],
Cases_Tennessee = time_series_cases$Tennessee$cases[seq(1,1300,by=100)],
Date_District_of_Columbia = time_series_cases$District_of_Columbia$date[seq(1,1300,by=100)],
Cases_District_of_Columbia = time_series_cases$District_of_Columbia$cases[seq(1,1300,by=100)])
data_to_plot
data_to_plot <- tibble(Date_Alaska = time_series_cases$Alaska$date[seq(1,1300,by=100)],
Cases_Alaska = time_series_cases$Alaska$cases[seq(1,1300,by=100)],
Date_California = time_series_cases$California$date[seq(1,1300,by=100)],
Cases_California = time_series_cases$California$cases[seq(1,1300,by=100)],
Date_New_Jersey = time_series_cases$New_Jersey$date[seq(1,1300,by=100)],
Cases_New_Jersey = time_series_cases$New_Jersey$cases[seq(1,1300,by=100)],
Date_Tennessee = time_series_cases$Tennessee$date[seq(1,1300,by=100)],
Cases_Tennessee = time_series_cases$Tennessee$cases[seq(1,1300,by=100)],
Date_District_of_Columbia = time_series_cases$District_of_Columbia$date[seq(1,1300,by=100)],
Cases_District_of_Columbia = time_series_cases$District_of_Columbia$cases[seq(1,1300,by=100)])
data_to_plot
library(cowplot)
data_to_plot <- tibble(Date_Alaska = time_series_cases$Alaska$date[seq(1,1300,by=100)],
Cases_Alaska = time_series_cases$Alaska$cases[seq(1,1300,by=100)],
Date_California = time_series_cases$California$date[seq(1,1300,by=100)],
Cases_California = time_series_cases$California$cases[seq(1,1300,by=100)],
Date_New_Jersey = time_series_cases$New_Jersey$date[seq(1,1300,by=100)],
Cases_New_Jersey = time_series_cases$New_Jersey$cases[seq(1,1300,by=100)],
Date_Tennessee = time_series_cases$Tennessee$date[seq(1,1300,by=100)],
Cases_Tennessee = time_series_cases$Tennessee$cases[seq(1,1300,by=100)],
Date_District_of_Columbia = time_series_cases$District_of_Columbia$date[seq(1,1300,by=100)],
Cases_District_of_Columbia = time_series_cases$District_of_Columbia$cases[seq(1,1300,by=100)])
data_to_plot
install.packages(cowplot)
data_to_plot <- tibble(Date_Alaska = time_series_cases$Alaska$date[seq(1,1300,by=100)],
Cases_Alaska = time_series_cases$Alaska$cases[seq(1,1300,by=100)],
Date_California = time_series_cases$California$date[seq(1,1300,by=100)],
Cases_California = time_series_cases$California$cases[seq(1,1300,by=100)],
Date_New_Jersey = time_series_cases$New_Jersey$date[seq(1,1300,by=100)],
Cases_New_Jersey = time_series_cases$New_Jersey$cases[seq(1,1300,by=100)],
Date_Tennessee = time_series_cases$Tennessee$date[seq(1,1300,by=100)],
Cases_Tennessee = time_series_cases$Tennessee$cases[seq(1,1300,by=100)],
Date_District_of_Columbia = time_series_cases$District_of_Columbia$date[seq(1,1300,by=100)],
Cases_District_of_Columbia = time_series_cases$District_of_Columbia$cases[seq(1,1300,by=100)])
data_to_plot
fig1<- ggplot(data_to_plot, aes(x=Date_Alaska,y=Cases_Alaska)) +
geom_point() + labs(x="Date",y="Cases", title="Alaska") + theme_bw()
fig2<- ggplot(data_to_plot, aes(x=Date_California,y=Cases_California)) +
geom_point() + labs(x="Date",y="Cases", title="California") + theme_bw()
fig3<- ggplot(data_to_plot, aes(x=Date_New_Jersey,y=Cases_New_Jersey)) +
geom_point() + labs(x="Date",y="Cases", title="New Jersey") + theme_bw()
fig4<- ggplot(data_to_plot, aes(x=Date_Tennessee,y=Cases_Tennessee)) +
geom_point() + labs(x="Date",y="Cases", title="Tennessee") + theme_bw()
fig5<- ggplot(data_to_plot, aes(x=Date_District_of_Columbia,y=Cases_District_of_Columbia)) +
geom_point() + labs(x="Date",y="Cases", title="District of Columbia") + theme_bw()
plot_grid(fig1 + theme(legend.justification = c(0,1)),
fig2 + theme(legend.justification = c(1,0)),
fig3 + theme(legend.justification = c(0,1)),
fig4 + theme(legend.justification = c(1,0)),
fig5 + theme(legend.justification = c(0,1)),
align = "v", axis = "lr", nrow=3,
ncol = 2,labels = LETTERS[1:5],
rel_heights = c(1,2))
install.packages("cowplot")
library(cowplot)
install.packages("cowplot")
install.packages('cowplot')
library(shiny)
library(ggplot2)
library(readxl)
data_for_vis <- read_excel("data_disorder.xlsx", range = "A1:K6469") %>%
select(Entity, Year, `Eating disorders (%)`) %>%
mutate(ed = as.numeric(`Eating disorders (%)`), Year = as.numeric(Year))
library(tidyverse)
data_for_vis <- read_excel("data_disorder.xlsx", range = "A1:K6469") %>%
select(Entity, Year, `Eating disorders (%)`) %>%
mutate(ed = as.numeric(`Eating disorders (%)`), Year = as.numeric(Year))
setwd("~/GitHub/hanyiyi111.github.io")
library(tidyverse)
data_for_vis <- read_excel("data_disorder.xlsx", range = "A1:K6469") %>%
select(Entity, Year, `Eating disorders (%)`) %>%
mutate(ed = as.numeric(`Eating disorders (%)`), Year = as.numeric(Year))
ui <- fluidPage(
titlePanel("Interactive Line Graph in Shiny"),
sidebarLayout(
sidebarPanel(
selectInput("Countries", "Select a Country:", unique(data_for_vis$Entity))
),
mainPanel(
plotOutput("linePlot")
)
)
)
server <- function(input, output) {
output$linePlot <- renderPlot({
data_for_vis %>% filter(Entity == input$Countries) %>%
ggplot(aes(x = Year, y = `Eating disorders (%)`)) +
geom_line() +
labs(title = "Line Graph by Country")
})
}
library(shiny); runApp('vis.R')
runApp('vis.R')
runApp('vis.R')
runApp('vis.R')
runApp('vis_alcohol.R')
runApp('vis_depression.R')
runApp('vis_bar_anxiety.R')
runApp('vis_bar_anxiety.R')
runApp('vis_bar_anxiety.R')
runApp('vis_bar_anxiety.R')
runApp('vis_bar_anxiety.R')
runApp('vis_bar_anxiety.R')
runApp('vis_bar_anxiety.R')
runApp('vis_anxiety.R')
runApp('vis_anxiety.R')
